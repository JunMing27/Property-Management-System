/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.adminExecutive;


import com.mycompany.buildingManager.buildingManager;
import com.mycompany.employee.employee;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Jun Ming
 */
public class adminExecEmployeeAddEditFrame extends javax.swing.JFrame {

    /**
     * Creates new form adminExecEmployeeAddEditFrame
     */
    public adminExecEmployeeAddEditFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        AddEditBtn = new javax.swing.JButton();
        employeeImage = new javax.swing.JLabel();
        imageUploader = new javax.swing.JButton();
        employeeIdField = new javax.swing.JTextField();
        employeeNameField = new javax.swing.JTextField();
        employeeAgeField = new javax.swing.JTextField();
        employeePhoneNumberField = new javax.swing.JTextField();
        employeeIdLabel = new javax.swing.JLabel();
        employeeNameLabel = new javax.swing.JLabel();
        employeeGenderLabel = new javax.swing.JLabel();
        employeeAgeLabel = new javax.swing.JLabel();
        employeePhoneNumberLabel = new javax.swing.JLabel();
        maleCheckBox = new javax.swing.JCheckBox();
        femaleCheckBox = new javax.swing.JCheckBox();
        employeeUserNameLabel = new javax.swing.JLabel();
        credentialNameField = new javax.swing.JTextField();
        employeePassLabel = new javax.swing.JLabel();
        employeeJobScopeLabel = new javax.swing.JLabel();
        credentialPasswordField = new javax.swing.JPasswordField();
        employeeJobScopeField = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(233, 233, 233));

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        AddEditBtn.setBackground(new java.awt.Color(255, 255, 255));
        AddEditBtn.setForeground(new java.awt.Color(0, 0, 0));
        AddEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEditBtnActionPerformed(evt);
            }
        });

        employeeImage.setForeground(new java.awt.Color(0, 0, 0));
        employeeImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        imageUploader.setBackground(new java.awt.Color(255, 255, 255));
        imageUploader.setForeground(new java.awt.Color(0, 0, 0));
        imageUploader.setText("upload image");
        imageUploader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageUploaderActionPerformed(evt);
            }
        });

        employeeIdField.setEnabled(false);
        employeeIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeIdFieldActionPerformed(evt);
            }
        });

        employeeIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeIdLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeIdLabel.setText("Employee ID");

        employeeNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeNameLabel.setText("Employee Name ");

        employeeGenderLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeGenderLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeGenderLabel.setText("Gender ");

        employeeAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeAgeLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeAgeLabel.setText("Age ");

        employeePhoneNumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeePhoneNumberLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeePhoneNumberLabel.setText("Phone Number");

        maleCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        maleCheckBox.setText("Male");
        maleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleCheckBoxActionPerformed(evt);
            }
        });

        femaleCheckBox.setForeground(new java.awt.Color(0, 0, 0));
        femaleCheckBox.setText("Female");
        femaleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleCheckBoxActionPerformed(evt);
            }
        });

        employeeUserNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeUserNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeUserNameLabel.setText("User Name");

        credentialNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credentialNameFieldActionPerformed(evt);
            }
        });

        employeePassLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeePassLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeePassLabel.setText("Password");

        employeeJobScopeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        employeeJobScopeLabel.setForeground(new java.awt.Color(0, 0, 0));
        employeeJobScopeLabel.setText("Job Scope");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(employeeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(AddEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imageUploader, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeIdLabel)
                                    .addComponent(employeeNameLabel)
                                    .addComponent(employeeGenderLabel)
                                    .addComponent(employeeAgeLabel)
                                    .addComponent(employeePhoneNumberLabel))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(employeeNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                        .addComponent(employeeIdField))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(maleCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(femaleCheckBox)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeUserNameLabel)
                                    .addComponent(employeePassLabel)
                                    .addComponent(employeeJobScopeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(employeeAgeField)
                                    .addComponent(employeePhoneNumberField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                    .addComponent(credentialNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                    .addComponent(credentialPasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeJobScopeField, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(191, 191, 191))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(backBtn)
                .addGap(12, 12, 12)
                .addComponent(employeeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imageUploader, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeGenderLabel)
                    .addComponent(maleCheckBox)
                    .addComponent(femaleCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeAgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeAgeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeePhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeePhoneNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(employeeJobScopeLabel)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(employeeUserNameLabel)
                            .addComponent(credentialNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(employeePassLabel)
                            .addComponent(credentialPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(AddEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(employeeJobScopeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        adminExecEmployeeManageFrame employeeManage = new adminExecEmployeeManageFrame();
        employeeManage.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        employeeManage.pack();
        employeeManage.setResizable(false);
        employeeManage.setLocationRelativeTo(null);
        employeeManage.setVisible(true);
        employeeManage.backButtonToggle();
        try {
            employeeManage.setUserType("Employee");
            employeeManage.setEmployeeData();
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_backBtnActionPerformed

    private void AddEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEditBtnActionPerformed
        // TODO add your handling code here:
        if(addEditDetector=="edit"){
            if((employeeNameField.getText()).equals("") ||(employeeAgeField.getText()).equals("") ||(employeePhoneNumberField.getText()).equals("") || (credentialNameField.getText()).equals("") || (credentialPasswordField.getPassword()).equals("") || this.imageName==null) {
                JOptionPane.showMessageDialog(null, "Enter all field", "Warning", JOptionPane.ERROR_MESSAGE);
            }else{
                adminExecutive adminExecutiveMain = new adminExecutive();
                ArrayList<String> dataList = new ArrayList<String>();
                dataList.add(employeeIdField.getText());
                dataList.add(employeeNameField.getText());
                if(maleCheckBox.isSelected()){
                    dataList.add("male");
                }else{
                    dataList.add("female");
                }
                dataList.add(employeeAgeField.getText());
                dataList.add(employeePhoneNumberField.getText());
                dataList.add((String)employeeJobScopeField.getSelectedItem());
                dataList.add(imageName);
                dataList.add(credentialNameField.getText());
                char[] i = credentialPasswordField.getPassword();
                String stringPassword = new String(i);
                dataList.add(stringPassword);
                adminExecutiveMain.editOrAddData(dataList, "Employee","Employee.txt","edit");
                //transfer uploaded image to our system image folder
                if (sourceFile!=null) {
                    File dest = new File("src/main/java/com/mycompany/image/" + this.imageName);
                    File source = sourceFile;
                    adminExecutiveMain.transferImage(source,dest);
                }
            }
        }else if(addEditDetector=="add"){
            if((employeeNameField.getText()).equals("") ||(employeeAgeField.getText()).equals("") ||(employeePhoneNumberField.getText()).equals("") || (credentialNameField.getText()).equals("") || (credentialPasswordField.getPassword()).equals("")|| this.imageName==null) {
                JOptionPane.showMessageDialog(null, "Enter all field", "Warning", JOptionPane.ERROR_MESSAGE);
            }else{
                employee employeeClass = new employee();
                ArrayList<String> dataList = new ArrayList<String>();
                employeeClass.getIncreasedID("Employee.txt","Employee");
                dataList.add(employeeClass.getUserId());
                dataList.add(employeeNameField.getText());
                if(maleCheckBox.isSelected()){
                    dataList.add("male");
                }else{
                    dataList.add("female");
                }
                dataList.add(employeeAgeField.getText());
                dataList.add(employeePhoneNumberField.getText());
                dataList.add((String)employeeJobScopeField.getSelectedItem());
                dataList.add(imageName);
                dataList.add(credentialNameField.getText());
                char[] i = credentialPasswordField.getPassword();
                String stringPassword = new String(i);
                dataList.add(stringPassword);
                System.out.println(dataList);
                adminExecutive adminExecutiveMain= new adminExecutive();
                adminExecutiveMain.editOrAddData(dataList, "Employee","Employee.txt","add");
                //transfer uploaded image to our system image folder
                File dest = new File("src/main/java/com/mycompany/image/" + this.imageName);
                File source = sourceFile;
                adminExecutiveMain.transferImage(source,dest);
                //set value empty after inserting
                employeeIdField.setText("");
                employeeNameField.setText("");
                maleCheckBox.setSelected(false);
                femaleCheckBox.setSelected(false);
                employeeAgeField.setText("");
                employeePhoneNumberField.setText("");
                credentialNameField.setText("");
                credentialPasswordField.setText("");
                employeeImage.setIcon(null);
            }
        }
    }//GEN-LAST:event_AddEditBtnActionPerformed

    private void imageUploaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageUploaderActionPerformed
        // TODO add your handling code here:
        try{
            // TODO add your handling code here:
            JFileChooser filechooser = new JFileChooser();
            adminExecutive adminExecutiveMain = new adminExecutive();
            filechooser.addChoosableFileFilter(adminExecutiveMain.new ImageFilter());
            filechooser.setAcceptAllFileFilterUsed(false);
            filechooser.showOpenDialog(null);
            sourceFile = filechooser.getSelectedFile();
            String filename = sourceFile.getName();
            this.imageName=filename;
            // get image path first so that the staff can add the image into this system's folder after clicking add item button:
            imagePath[0] = sourceFile.getAbsolutePath();
            try{
                // resize the image so that it can fit the border:
                BufferedImage ItemImage = ImageIO.read(new File(imagePath[0]));
                Image resizedImage = ItemImage.getScaledInstance(165, 130, Image.SCALE_SMOOTH);
                employeeImage.setIcon(new ImageIcon(resizedImage));
            }
            catch(IOException e){}
        }
        catch(Exception e){
        }
    }//GEN-LAST:event_imageUploaderActionPerformed

    private void employeeIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeIdFieldActionPerformed

    private void maleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleCheckBoxActionPerformed
        // TODO add your handling code here:
        if(maleCheckBox.isSelected()){
            femaleCheckBox.setSelected(false);
        }
    }//GEN-LAST:event_maleCheckBoxActionPerformed

    private void femaleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleCheckBoxActionPerformed
        // TODO add your handling code here:
        if(femaleCheckBox.isSelected()){
            maleCheckBox.setSelected(false);
        }
    }//GEN-LAST:event_femaleCheckBoxActionPerformed

    private void credentialNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_credentialNameFieldActionPerformed

    private String imageName=null;
    File sourceFile=null;
    String[] imagePath = new String[1];
    private String addEditDetector;
    private String fileType="Employee.txt";
    private String userType="Employee";
    
    public void addEditDetect(String functionType,String id) {
        if(functionType=="edit"){
            this.addEditDetector="edit";
            employee employeeClass = new employee();
            employeeClass.chooseTxtFile("Employee");
            employeeClass.getDataViewSingle(id, fileType,userType);
            AddEditBtn.setText("Update");
            employeeIdField.setText(employeeClass.getUserId());
            employeeNameField.setText(employeeClass.getUserName());
            if(employeeClass.getUserGender().equals("male")){
                maleCheckBox.setSelected(true);
            }else if(employeeClass.getUserGender().equals("female")){
                femaleCheckBox.setSelected(true);
            }
            employeeAgeField.setText(employeeClass.getUserAge());
            employeePhoneNumberField.setText(employeeClass.getUserPhone());
            employeeJobScopeField.addItem("Security");
            employeeJobScopeField.addItem("Cleaner");
            employeeJobScopeField.addItem("Technician");
            employeeJobScopeField.setSelectedItem(employeeClass.getEmployeeJobScope());
            this.imageName=employeeClass.getUserImage();
            credentialNameField.setText(employeeClass.getCredentialName());
            credentialPasswordField.setText(employeeClass.getPassword());
            try{
                BufferedImage UserImage = ImageIO.read(new File("src/main/java/com/mycompany/image/"+employeeClass.getUserImage()));
                Image resizedImage = UserImage.getScaledInstance(165, 130, Image.SCALE_SMOOTH);
                employeeImage.setIcon(new ImageIcon(resizedImage));
                }catch(Exception e){}
        }else if (functionType=="add"){
            this.addEditDetector="add";
            AddEditBtn.setText("Add");
            employeeIdField.setVisible(false);
            employeeIdLabel.setVisible(false);
            employeeJobScopeField.addItem("Security");
            employeeJobScopeField.addItem("Cleaner");
            employeeJobScopeField.addItem("Technician");
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminExecEmployeeAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminExecEmployeeAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminExecEmployeeAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminExecEmployeeAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminExecEmployeeAddEditFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddEditBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField credentialNameField;
    private javax.swing.JPasswordField credentialPasswordField;
    private javax.swing.JTextField employeeAgeField;
    private javax.swing.JLabel employeeAgeLabel;
    private javax.swing.JLabel employeeGenderLabel;
    private javax.swing.JTextField employeeIdField;
    private javax.swing.JLabel employeeIdLabel;
    private javax.swing.JLabel employeeImage;
    private javax.swing.JComboBox<String> employeeJobScopeField;
    private javax.swing.JLabel employeeJobScopeLabel;
    private javax.swing.JTextField employeeNameField;
    private javax.swing.JLabel employeeNameLabel;
    private javax.swing.JLabel employeePassLabel;
    private javax.swing.JTextField employeePhoneNumberField;
    private javax.swing.JLabel employeePhoneNumberLabel;
    private javax.swing.JLabel employeeUserNameLabel;
    private javax.swing.JCheckBox femaleCheckBox;
    private javax.swing.JButton imageUploader;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox maleCheckBox;
    // End of variables declaration//GEN-END:variables
}
