/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.adminExecutive;

import java.io.FileNotFoundException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Jun Ming
 */
public class adminExecFacBookingAddEditFrame extends javax.swing.JFrame {

    /**
     * Creates new form adminExecFacBookingAddEditFrame
     */
    public adminExecFacBookingAddEditFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        bookingIdLabel = new javax.swing.JLabel();
        facilityIdLabel = new javax.swing.JLabel();
        addEditBtn = new javax.swing.JButton();
        bookingIdField = new javax.swing.JTextField();
        facilityIdComboBox = new javax.swing.JComboBox<>();
        facilityNameLabel = new javax.swing.JLabel();
        facilityNameField = new javax.swing.JTextField();
        bookingDateDropDown = new com.toedter.calendar.JDateChooser();
        bookingDateLabel = new javax.swing.JLabel();
        bookingTimeLabel = new javax.swing.JLabel();
        bookingTimeDropDown = new javax.swing.JComboBox<>();
        bookingDurationDropDown = new javax.swing.JComboBox<>();
        bookingDurationLabel = new javax.swing.JLabel();
        residentIdLabel = new javax.swing.JLabel();
        residentIdComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        bookingIdLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingIdLabel.setForeground(new java.awt.Color(0, 0, 0));
        bookingIdLabel.setText("Facility Booking ID");

        facilityIdLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        facilityIdLabel.setForeground(new java.awt.Color(0, 0, 0));
        facilityIdLabel.setText("Facility ID");

        addEditBtn.setBackground(new java.awt.Color(255, 255, 255));
        addEditBtn.setForeground(new java.awt.Color(0, 0, 0));
        addEditBtn.setText("UPDATE/ADD");
        addEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEditBtnActionPerformed(evt);
            }
        });

        bookingIdField.setBackground(new java.awt.Color(255, 255, 255));
        bookingIdField.setEnabled(false);
        bookingIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIdFieldActionPerformed(evt);
            }
        });

        facilityIdComboBox.setBackground(new java.awt.Color(255, 255, 255));
        facilityIdComboBox.setForeground(new java.awt.Color(0, 0, 0));
        facilityIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilityIdComboBoxActionPerformed(evt);
            }
        });

        facilityNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        facilityNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        facilityNameLabel.setText("Facility Name");

        facilityNameField.setBackground(new java.awt.Color(255, 255, 255));
        facilityNameField.setEnabled(false);
        facilityNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilityNameFieldActionPerformed(evt);
            }
        });

        bookingDateDropDown.setBackground(new java.awt.Color(255, 255, 255));

        bookingDateLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingDateLabel.setForeground(new java.awt.Color(0, 0, 0));
        bookingDateLabel.setText("Booking Date");

        bookingTimeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingTimeLabel.setForeground(new java.awt.Color(0, 0, 0));
        bookingTimeLabel.setText("Start Time (24H format)");

        bookingTimeDropDown.setBackground(new java.awt.Color(255, 255, 255));
        bookingTimeDropDown.setForeground(new java.awt.Color(0, 0, 0));
        bookingTimeDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingTimeDropDownActionPerformed(evt);
            }
        });

        bookingDurationDropDown.setBackground(new java.awt.Color(255, 255, 255));
        bookingDurationDropDown.setForeground(new java.awt.Color(0, 0, 0));
        bookingDurationDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingDurationDropDownActionPerformed(evt);
            }
        });

        bookingDurationLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingDurationLabel.setForeground(new java.awt.Color(0, 0, 0));
        bookingDurationLabel.setText("Duration (Hours)");

        residentIdLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        residentIdLabel.setForeground(new java.awt.Color(0, 0, 0));
        residentIdLabel.setText("Resident ID");

        residentIdComboBox.setBackground(new java.awt.Color(255, 255, 255));
        residentIdComboBox.setForeground(new java.awt.Color(0, 0, 0));
        residentIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                residentIdComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(facilityIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(facilityNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingDateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingTimeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingDurationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(residentIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(facilityIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingIdField)
                            .addComponent(facilityNameField)
                            .addComponent(bookingDateDropDown, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(bookingTimeDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingDurationDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(residentIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(addEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingIdLabel)
                    .addComponent(bookingIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facilityIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facilityIdLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facilityNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facilityNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(residentIdLabel)
                    .addComponent(residentIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bookingDateDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookingTimeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookingTimeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookingDurationDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookingDurationLabel))
                        .addGap(40, 40, 40)
                        .addComponent(addEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bookingDateLabel))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        adminExecFacBookingManageFrame facilityBookingPage = new adminExecFacBookingManageFrame();
        facilityBookingPage.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        facilityBookingPage.pack();
        facilityBookingPage.setResizable(false);
        facilityBookingPage.setLocationRelativeTo(null);
        facilityBookingPage.setVisible(true);
        facilityBookingPage.backButtonToggle();
        facilityBookingPage.setFacilityBookingData();
    }//GEN-LAST:event_backBtnActionPerformed

    private void addEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEditBtnActionPerformed
        // TODO add your handling code here:
        if(addEditDetector=="edit"){
            if((facilityNameField.getText()).equals("") ||bookingDateDropDown.getDate().equals("")||((String)bookingTimeDropDown.getSelectedItem()).equals("") ||((String)residentIdComboBox.getSelectedItem()).equals("")||((String)bookingDurationDropDown.getSelectedItem()).equals("")){
                JOptionPane.showMessageDialog(null, "Enter all field", "Warning", JOptionPane.ERROR_MESSAGE);
            }else{
                adminExecutive main = new adminExecutive();
                adminExecutive.adminExecutiveMethod mainInner = main.new adminExecutiveMethod();
                facilityBooking facilityBookingClass = new facilityBooking();
                ArrayList<String> dataList = new ArrayList<String>();

                dataList.add(bookingIdField.getText());
                dataList.add(((String)facilityIdComboBox.getSelectedItem()));
                dataList.add(facilityNameField.getText());
                dataList.add(((String)residentIdComboBox.getSelectedItem()));
                
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String newBookingDate = sdf.format(bookingDateDropDown.getDate());
                dataList.add(newBookingDate);
                
                dataList.add(((String)bookingTimeDropDown.getSelectedItem()));
                dataList.add(((String)bookingDurationDropDown.getSelectedItem()));
                mainInner.addEditFacilityBooking(dataList, "FacilityBooking","FacilityBooking.txt","edit");
                System.out.println(dataList);
            }
        }
        else if(addEditDetector=="add"){
            if((facilityNameField.getText()).equals("") ||bookingDateDropDown.getDate().equals("")||((String)bookingTimeDropDown.getSelectedItem()).equals("") ||((String)residentIdComboBox.getSelectedItem()).equals("")||((String)bookingDurationDropDown.getSelectedItem()).equals("")){
                JOptionPane.showMessageDialog(null, "Enter all field", "Warning", JOptionPane.ERROR_MESSAGE);
            }else{
                adminExecutive main = new adminExecutive();
                adminExecutive.adminExecutiveMethod mainInner = main.new adminExecutiveMethod();
                facilityBooking facilityBookingClass = new facilityBooking();
                ArrayList<String> dataList = new ArrayList<String>();

                facilityBookingClass.getIncreasedID("FacilityBooking.txt","FacilityBooking");
                dataList.add(facilityBookingClass.getFacilityBookingId());
                dataList.add(((String)facilityIdComboBox.getSelectedItem()));
                dataList.add(facilityNameField.getText());
                dataList.add(((String)residentIdComboBox.getSelectedItem()));
                
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String newBookingDate = sdf.format(bookingDateDropDown.getDate());
                dataList.add(newBookingDate);
                dataList.add(((String)bookingTimeDropDown.getSelectedItem()));
                dataList.add(((String)bookingDurationDropDown.getSelectedItem()));
                mainInner.addEditFacilityBooking(dataList, "FacilityBooking","FacilityBooking.txt","add");
                System.out.println(dataList);
            }
        }
    }//GEN-LAST:event_addEditBtnActionPerformed

    private void bookingIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIdFieldActionPerformed

    private void facilityIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilityIdComboBoxActionPerformed
        // TODO add your handling code here:
        if((String)facilityIdComboBox.getSelectedItem()!=""){
            facilityBooking facilityBookingClass = new facilityBooking();
            facilityBooking.facilityBookingMethod mainInner = facilityBookingClass.new facilityBookingMethod();
            try {
                mainInner.getDropDownData("Facility.txt","FacilityBookingGetFacilityName",(String)facilityIdComboBox.getSelectedItem());
            } catch (FileNotFoundException ex) {
            }
            System.out.println((facilityBookingClass.getDropDownDataTemp()).get(0));
            facilityNameField.setText((facilityBookingClass.getDropDownDataTemp()).get(0));
        }
    }//GEN-LAST:event_facilityIdComboBoxActionPerformed

    private void facilityNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilityNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facilityNameFieldActionPerformed

    private void bookingTimeDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingTimeDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingTimeDropDownActionPerformed

    private void bookingDurationDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingDurationDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingDurationDropDownActionPerformed

    private void residentIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_residentIdComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_residentIdComboBoxActionPerformed

    private String addEditDetector;
    private String fileType="FacilityBooking.txt";
    private String userType="FacilityBooking";
    
    
    public void addEditDetect(String functionType,String id) throws FileNotFoundException {
        if(functionType=="edit"){
            facilityBooking facilityBookingClass = new facilityBooking();
            facilityBooking.facilityBookingMethod mainInner = facilityBookingClass.new facilityBookingMethod();
            this.addEditDetector="edit";
            facilityBookingClass.chooseTxtFile("FacilityBooking");
            facilityBookingClass.getDataViewSingle(id, fileType,userType);
            
            addEditBtn.setText("Update");
            bookingIdField.setText(facilityBookingClass.getFacilityBookingId());
            mainInner.getDropDownData("Facility.txt","FacilityBooking","");
            int i=0;
            for (String x : facilityBookingClass.getDropDownData()) {
                facilityIdComboBox.addItem((facilityBookingClass.getDropDownData()).get(i));
                i++;
            }
            facilityIdComboBox.setSelectedItem(facilityBookingClass.getFacilityId());
            
            facilityNameField.setText(facilityBookingClass.getFacilityName());
            
            facilityBookingClass.setDropDownNull();
            mainInner.getDropDownData("residentProfile.txt","FacilityBooking","");
            i=0;
            for (String x : facilityBookingClass.getDropDownData()) {
                residentIdComboBox.addItem((facilityBookingClass.getDropDownData()).get(i));
                i++;
            }
            residentIdComboBox.setSelectedItem(facilityBookingClass.getResidentId());
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date existingDate;
            try {  
                existingDate =sdf.parse(facilityBookingClass.getBookingDate());
                bookingDateDropDown.setDate(existingDate);
            } catch (ParseException ex) {
            }
            
            bookingTimeDropDown.addItem("1200");
            bookingTimeDropDown.addItem("1300");
            bookingTimeDropDown.addItem("1400");
            bookingTimeDropDown.addItem("1500");
            bookingTimeDropDown.addItem("1600");
            bookingTimeDropDown.addItem("1700");
            bookingTimeDropDown.addItem("1800");
            bookingTimeDropDown.addItem("1900");
            bookingTimeDropDown.addItem("2000");
            bookingTimeDropDown.setSelectedItem(facilityBookingClass.getBookingStartTime());
            
            bookingDurationDropDown.addItem("1");
            bookingDurationDropDown.addItem("2");
            bookingDurationDropDown.addItem("3");
            bookingDurationDropDown.setSelectedItem(facilityBookingClass.getBookingDuration());
            
        }else if (functionType=="add"){
            this.addEditDetector="add";
            addEditBtn.setText("Add");
            bookingIdField.setVisible(false);
            bookingIdLabel.setVisible(false);
            facilityNameField.setEnabled(false);
            bookingTimeDropDown.addItem("1200");
            bookingTimeDropDown.addItem("1300");
            bookingTimeDropDown.addItem("1400");
            bookingTimeDropDown.addItem("1500");
            bookingTimeDropDown.addItem("1600");
            bookingTimeDropDown.addItem("1700");
            bookingTimeDropDown.addItem("1800");
            bookingTimeDropDown.addItem("1900");
            bookingTimeDropDown.addItem("2000");
            
            bookingDurationDropDown.addItem("1");
            bookingDurationDropDown.addItem("2");
            bookingDurationDropDown.addItem("3");
            
            facilityBooking facilityBookingClass = new facilityBooking();
            facilityBooking.facilityBookingMethod mainInner = facilityBookingClass.new facilityBookingMethod();
            mainInner.getDropDownData("Facility.txt","FacilityBooking","");
            int i=0;
            for (String x : facilityBookingClass.getDropDownData()) {
                facilityIdComboBox.addItem((facilityBookingClass.getDropDownData()).get(i));
                i++;
            }
            facilityBookingClass.setDropDownNull();
            mainInner.getDropDownData("residentProfile.txt","FacilityBooking","");
            i=0;
            for (String x : facilityBookingClass.getDropDownData()) {
                residentIdComboBox.addItem((facilityBookingClass.getDropDownData()).get(i));
                i++;
            }
            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminExecFacBookingAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminExecFacBookingAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminExecFacBookingAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminExecFacBookingAddEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminExecFacBookingAddEditFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEditBtn;
    private javax.swing.JButton backBtn;
    private com.toedter.calendar.JDateChooser bookingDateDropDown;
    private javax.swing.JLabel bookingDateLabel;
    private javax.swing.JComboBox<String> bookingDurationDropDown;
    private javax.swing.JLabel bookingDurationLabel;
    private javax.swing.JTextField bookingIdField;
    private javax.swing.JLabel bookingIdLabel;
    private javax.swing.JComboBox<String> bookingTimeDropDown;
    private javax.swing.JLabel bookingTimeLabel;
    private javax.swing.JComboBox<String> facilityIdComboBox;
    private javax.swing.JLabel facilityIdLabel;
    private javax.swing.JTextField facilityNameField;
    private javax.swing.JLabel facilityNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> residentIdComboBox;
    private javax.swing.JLabel residentIdLabel;
    // End of variables declaration//GEN-END:variables
}
