/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.AccExecutive;

import com.mycompany.AccExecutive.AccExecMain;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import java.awt.BorderLayout;
import javax.swing.border.EmptyBorder;

import java.io.*; 

/**
 *
 * @author user
 */
public class AccExecReceiptView extends javax.swing.JFrame {

    ModelReceipt receipt;

    /**
     * Creates new form AccExecReceiptView
     */
    public AccExecReceiptView() {
        initComponents();
    }

    public AccExecReceiptView(ModelReceipt receipt) {
        this.receipt = receipt;
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JPanel HeaderPanel = new JPanel();
        JButton BackAccExecReceiptManage = new JButton();
        JButton UpdateNewAccExecReceiptManage = new JButton();

        JTextField receiptIdTf      = new JTextField(receipt.getReceiptId(), 20);
        JTextField userIdTf         = new JTextField(receipt.getUserId(), 20);
        JTextField descriptionTf    = new JTextField(receipt.getDescription(), 20);
        JTextField paidAmountTf     = new JTextField(receipt.getPaidAmount(), 20);
        JTextField paidDateTf       = new JTextField(receipt.getPaidDate(), 20);
        JTextField dateIssuedTf     = new JTextField(receipt.getDateIssued(), 20);

        BackAccExecReceiptManage.setBackground(new java.awt.Color(204, 204, 204));
        BackAccExecReceiptManage.setForeground(new java.awt.Color(0, 0, 0));
        BackAccExecReceiptManage.setText("Back");
        BackAccExecReceiptManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispose();
                AccExecReceiptManage nextFrame = new AccExecReceiptManage();
                nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                nextFrame.setLocationRelativeTo(null);
                nextFrame.setVisible(true);
            }
        });

        UpdateNewAccExecReceiptManage.setBackground(new java.awt.Color(204, 204, 204));
        UpdateNewAccExecReceiptManage.setForeground(new java.awt.Color(0, 0, 0));
        UpdateNewAccExecReceiptManage.setText("Update");
        UpdateNewAccExecReceiptManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipt.setReceiptId(receiptIdTf.getText());
                receipt.setUserId(userIdTf.getText());
                receipt.setDescription(descriptionTf.getText());
                receipt.setPaidAmount(paidAmountTf.getText());
                receipt.setPaidDate(paidDateTf.getText());
                receipt.setDateIssued(dateIssuedTf.getText());

                boolean found = false;
                String fileName = "./com/mycompany/textFile/ReceiptContent.txt";
                String dataToAppendOrUpdate = receipt.toString();
                StringBuilder sb = new StringBuilder();
        
                try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        if (line.startsWith(dataToAppendOrUpdate.split(",")[0])) {
                            sb.append(dataToAppendOrUpdate).append("\n");
                            found = true;
                        } else {
                            sb.append(line).append("\n");
                        }
                    }
                } catch (IOException e) {
                    System.err.println("Error reading file: " + e.getMessage());
                }
        
                if (!found) {
                    sb.append(dataToAppendOrUpdate).append("\n");
                }
        
                try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
                    bw.write(sb.toString());
                } catch (IOException e) {
                    System.err.println("Error writing to file: " + e.getMessage());
                }

                dispose();
                AccExecReceiptManage nextFrame = new AccExecReceiptManage();
                nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                nextFrame.setLocationRelativeTo(null);
                nextFrame.setVisible(true);
            }
        });

        JPanel statementPanel = new JPanel();

        statementPanel.setBorder(BorderFactory.createLineBorder(Color.black));
        statementPanel.setPreferredSize(new Dimension(100, 180));
        statementPanel.setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;

        statementPanel.setBorder(new EmptyBorder(0,40,0,0));
        statementPanel.add(new JLabel("Receipt ID: "), gbc);
        gbc.gridy++;
        statementPanel.add(new JLabel("User ID: "), gbc);
        gbc.gridy++;
        statementPanel.add(new JLabel("Description: "), gbc);
        gbc.gridy++;
        statementPanel.add(new JLabel("Paid Amount: "), gbc);
        gbc.gridy++;
        statementPanel.add(new JLabel("Paid Date: "), gbc);
        gbc.gridy++;
        statementPanel.add(new JLabel("Date Issued: "), gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        statementPanel.add(receiptIdTf, gbc);
        gbc.gridy++;
        statementPanel.add(userIdTf, gbc);
        gbc.gridy++;
        statementPanel.add(descriptionTf, gbc);
        gbc.gridy++;
        statementPanel.add(paidAmountTf, gbc);
        gbc.gridy++;
        statementPanel.add(paidDateTf, gbc);
        gbc.gridy++;
        statementPanel.add(dateIssuedTf, gbc);

        HeaderPanel.setBackground(new java.awt.Color(254, 204, 204));
        add(HeaderPanel, BorderLayout.PAGE_START);
        HeaderPanel.add(BackAccExecReceiptManage, BorderLayout.LINE_START);
        HeaderPanel.add(UpdateNewAccExecReceiptManage, BorderLayout.LINE_END);

        add(HeaderPanel, BorderLayout.PAGE_START);
        add(statementPanel, BorderLayout.CENTER);
        setSize(500, 450);
    }


}
