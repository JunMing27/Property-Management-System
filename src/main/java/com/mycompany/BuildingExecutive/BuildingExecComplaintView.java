/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.BuildingExecutive;

import com.mycompany.BuildingExecutive.BuildingExecComplaintManage;
import com.mycompany.BuildingExecutive.BuildingExecMain;
import com.mycompany.BuildingExecutive.ModelComplaint;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import java.awt.BorderLayout;
import javax.swing.border.EmptyBorder;

import java.io.*; 

/**
 *
 * @author user
 */
public class BuildingExecComplaintView extends javax.swing.JFrame {

    ModelComplaint complaint;

    /**
     * Creates new form BuildingExecComplaintView
     */
    public BuildingExecComplaintView() {
        initComponents();
    }

    public BuildingExecComplaintView(ModelComplaint complaint) {
        this.complaint = complaint;
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JPanel HeaderPanel = new JPanel();
        JButton BackBuildingExecComplaintManage = new JButton();
        JButton UpdateNewBuildingExecComplaintManage = new JButton();
        
        JTextField complaintIdTf = new JTextField(complaint.getComplaintId(), 20);
        JTextField complaintDetailTf = new JTextField(complaint.getComplaintDetails(), 20);
        JTextField complaintReplyTf = new JTextField(complaint.getComplaintReply(), 20);
        JTextField residentIdTf = new JTextField(complaint.getResidentId(), 20);

        BackBuildingExecComplaintManage.setBackground(new java.awt.Color(204, 204, 204));
        BackBuildingExecComplaintManage.setForeground(new java.awt.Color(0, 0, 0));
        BackBuildingExecComplaintManage.setText("Back");
        BackBuildingExecComplaintManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispose();
                BuildingExecComplaintManage nextFrame = new BuildingExecComplaintManage();
                nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                nextFrame.setLocationRelativeTo(null);
                nextFrame.setVisible(true);
            }
        });

        UpdateNewBuildingExecComplaintManage.setBackground(new java.awt.Color(204, 204, 204));
        UpdateNewBuildingExecComplaintManage.setForeground(new java.awt.Color(0, 0, 0));
        UpdateNewBuildingExecComplaintManage.setText("Update");
        UpdateNewBuildingExecComplaintManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complaint.setComplaintId(complaintIdTf.getText());
                complaint.setComplaintDetails(complaintDetailTf.getText());
                complaint.setComplaintReply(complaintReplyTf.getText());
                complaint.setResidentId(residentIdTf.getText());

                boolean found = false;
                String fileName = "./com/mycompany/textFile/Complaint.txt";
                String dataToAppendOrUpdate = complaint.toString();
                StringBuilder sb = new StringBuilder();
        
                try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        if (line.startsWith(dataToAppendOrUpdate.split(",")[0])) {
                            sb.append(dataToAppendOrUpdate).append("\n");
                            found = true;
                        } else {
                            sb.append(line).append("\n");
                        }
                    }
                } catch (IOException e) {
                    System.err.println("Error reading file: " + e.getMessage());
                }
        
                if (!found) {
                    sb.append(dataToAppendOrUpdate).append("\n");
                }
        
                try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
                    bw.write(sb.toString());
                } catch (IOException e) {
                    System.err.println("Error writing to file: " + e.getMessage());
                }

                dispose();
                BuildingExecComplaintManage nextFrame = new BuildingExecComplaintManage();
                nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                nextFrame.setLocationRelativeTo(null);
                nextFrame.setVisible(true);
            }
        });

        JPanel complaintPanel = new JPanel();

        complaintPanel.setBorder(BorderFactory.createLineBorder(Color.black));
        complaintPanel.setPreferredSize(new Dimension(100, 180));
        complaintPanel.setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;

        complaintPanel.setBorder(new EmptyBorder(0,40,0,0));
        complaintPanel.add(new JLabel("Complaint ID: "), gbc);
        gbc.gridy++;
        complaintPanel.add(new JLabel("Complaint Detail: "), gbc);
        gbc.gridy++;
        complaintPanel.add(new JLabel("Complaint Reply: "), gbc);
        gbc.gridy++;
        complaintPanel.add(new JLabel("Resident Id: "), gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        complaintPanel.add(complaintIdTf, gbc);
        gbc.gridy++;
        complaintPanel.add(complaintDetailTf, gbc);
        gbc.gridy++;
        complaintPanel.add(complaintReplyTf, gbc);
        gbc.gridy++;
        complaintPanel.add(residentIdTf, gbc);

        HeaderPanel.setBackground(new java.awt.Color(254, 204, 204));
        add(HeaderPanel, BorderLayout.PAGE_START);
        HeaderPanel.add(BackBuildingExecComplaintManage, BorderLayout.LINE_START);
        HeaderPanel.add(UpdateNewBuildingExecComplaintManage, BorderLayout.LINE_END);

        add(HeaderPanel, BorderLayout.PAGE_START);
        add(complaintPanel, BorderLayout.CENTER);
        setSize(500, 450);
    }


}
