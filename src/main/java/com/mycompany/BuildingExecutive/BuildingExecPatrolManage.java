/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.BuildingExecutive;

import com.mycompany.mavenproject1.AdminExecComAddEdit;
import com.mycompany.mavenproject1.AdminExecOption;
import com.mycompany.mavenproject1.AdminExecutiveMain;
import com.mycompany.mavenproject1.BusManBudgetPlanningView;
import com.mycompany.mavenproject1.BusManUserManageOption;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.awt.BorderLayout;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.BorderFactory;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import javax.swing.border.EmptyBorder;

import java.io.*; 
import com.mycompany.BuildingExecutive.ModelPatrol;

/**
 *
 * @author user
 */
public class BuildingExecPatrolManage extends javax.swing.JFrame {

    String userId;

    /**
     * Creates new form BuildingExecPatrolManage
     */
    public BuildingExecPatrolManage() {
        initComponents();
    }
    public BuildingExecPatrolManage(String userId) {
        this();
        this.userId = userId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        DataPanel = new JPanel();
        HeaderPanel = new JPanel();

        OptionBuildingExecPatrolManage = new javax.swing.JButton();
        AddNewBuildingExecPatrolManage = new javax.swing.JButton();

        OptionBuildingExecPatrolManage.setBackground(new java.awt.Color(204, 204, 204));
        OptionBuildingExecPatrolManage.setForeground(new java.awt.Color(0, 0, 0));
        OptionBuildingExecPatrolManage.setText("Back");
        OptionBuildingExecPatrolManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispose();
                BuildingExecMain nextFrame = new BuildingExecMain();
                nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                nextFrame.pack();
                nextFrame.setResizable(false);
                nextFrame.setLocationRelativeTo(null);
                nextFrame.setVisible(true);
            }
        });

        AddNewBuildingExecPatrolManage.setBackground(new java.awt.Color(204, 204, 204));
        AddNewBuildingExecPatrolManage.setForeground(new java.awt.Color(0, 0, 0));
        AddNewBuildingExecPatrolManage.setText("Add New");
        AddNewBuildingExecPatrolManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // AddNewBuildingExecPatrolManageActionPerformed(evt);
                changeFrame(new ModelPatrol());
            }
        });

        HeaderPanel.setBackground(new java.awt.Color(254, 204, 204));
        // NavigationPanel.setBackground(new java.awt.Color(254, 204, 254));

        add(HeaderPanel, BorderLayout.PAGE_START);
        HeaderPanel.add(OptionBuildingExecPatrolManage, BorderLayout.LINE_START);
        HeaderPanel.add(AddNewBuildingExecPatrolManage, BorderLayout.LINE_END);

        add(new JScrollPane(DataPanel));
        DataPanel.setSize(500, 450);
        DataPanel.setLayout(new BoxLayout(DataPanel, BoxLayout.Y_AXIS));

        String fileName = "./com/mycompany/textFile/CheckpointRecord.txt";
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = br.readLine()) != null) {
                newPatrol(line);
            }
        } catch (IOException e) {
            System.err.println("Error reading file: " + e.getMessage());
        }

        DataPanel.setBackground(Color.BLUE);
        setSize(500, 450);
        // pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeFrame(ModelPatrol patrol) {
        dispose();
        BuildingExecPatrolView nextFrame = new BuildingExecPatrolView(patrol);
        nextFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // nextFrame.pack();
        // nextFrame.setResizable(false);
        nextFrame.setLocationRelativeTo(null);
        nextFrame.setVisible(true);
    }

    private void newPatrol(String line) {
        ModelPatrol patrol = new ModelPatrol(line);
        JPanel patrolPanel = new JPanel();

        patrolPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(Color.black), new EmptyBorder(0,40,0,0)));
        patrolPanel.setPreferredSize(new Dimension(300, 180));
        patrolPanel.setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;


        patrolPanel.add(new JLabel("Checkpoint Record ID: "), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel("User Id: "), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel("Block Number: "), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel("Checkpoint Date: "), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel("Checkpoint Time: "), gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        patrolPanel.add(new JLabel(patrol.getCheckpointRecordId()), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel(patrol.getUserId()), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel(patrol.getBlockNumber()), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel(patrol.getCheckpointDate()), gbc);
        gbc.gridy++;
        patrolPanel.add(new JLabel(patrol.getCheckpointTime()), gbc);

        JButton viewBtn = new JButton("View Details");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeFrame(patrol);
            }
        });

        JButton removeBtn = new JButton("Remove Details");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                String fileName = "./com/mycompany/textFile/CheckpointRecord.txt";
                String lineToRemove = patrol.toString();

                try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                    StringBuilder sb = new StringBuilder();
                    String line;
                    while ((line = br.readLine()) != null) {
                        if (!line.trim().equals(lineToRemove)) {
                            sb.append(line).append("\n");
                        }
                    }
                    try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
                        bw.write(sb.toString());
                    } catch (IOException e) {
                        System.err.println("Error writing to file: " + e.getMessage());
                    }
                } catch (IOException e) {
                    System.err.println("Error reading file: " + e.getMessage());
                }

                System.out.println("REMOVED! "+patrol);
                DataPanel.remove(patrolPanel);
                invalidate();
                validate();
                repaint();
            }
        });

        gbc.gridx = 2;
        gbc.gridy = 1;
        patrolPanel.add(viewBtn, gbc);
        gbc.gridy = 2;
        patrolPanel.add(removeBtn, gbc);

        DataPanel.add(patrolPanel, BorderLayout.CENTER);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuildingExecPatrolManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DataPanel;
    private javax.swing.JPanel HeaderPanel;
    // private javax.swing.JPanel NavigationPanel;

    private javax.swing.JButton AddNewBuildingExecPatrolManage;
    private javax.swing.JButton OptionBuildingExecPatrolManage;
    // private javax.swing.JButton BackBuildingExecPatrolManage;
    // private javax.swing.JButton NextBuildingExecPatrolManage;

    // End of variables declaration//GEN-END:variables
}
