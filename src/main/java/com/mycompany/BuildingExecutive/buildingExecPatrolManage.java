/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.BuildingExecutive;
//

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class buildingExecPatrolManage extends javax.swing.JFrame {

    /**
     * Creates new form buildingExecPatrolManage
     */
    public buildingExecPatrolManage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        AddNew = new javax.swing.JButton();
        previousPage = new javax.swing.JButton();
        nextPage = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ViewDetails1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        userId1 = new javax.swing.JLabel();
        blockNumber1 = new javax.swing.JLabel();
        checkPointRecordDate1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        checkPointRecordID1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        checkPointRecordTime1 = new javax.swing.JLabel();
        Delete1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ViewDetails3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        userId3 = new javax.swing.JLabel();
        blockNumber3 = new javax.swing.JLabel();
        checkPointRecordDate3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        checkPointRecordID3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        checkPointRecordTime3 = new javax.swing.JLabel();
        Delete3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ViewDetails2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        userId2 = new javax.swing.JLabel();
        blockNumber2 = new javax.swing.JLabel();
        checkPointRecordDate2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        checkPointRecordID2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        checkPointRecordTime2 = new javax.swing.JLabel();
        Delete2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Back.setBackground(new java.awt.Color(204, 204, 204));
        Back.setForeground(new java.awt.Color(0, 0, 0));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        AddNew.setBackground(new java.awt.Color(204, 204, 204));
        AddNew.setForeground(new java.awt.Color(0, 0, 0));
        AddNew.setText("Add New");
        AddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewActionPerformed(evt);
            }
        });

        previousPage.setBackground(new java.awt.Color(204, 204, 204));
        previousPage.setForeground(new java.awt.Color(0, 0, 0));
        previousPage.setText("Back");
        previousPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageActionPerformed(evt);
            }
        });

        nextPage.setBackground(new java.awt.Color(204, 204, 204));
        nextPage.setForeground(new java.awt.Color(0, 0, 0));
        nextPage.setText("Next");
        nextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageActionPerformed(evt);
            }
        });

        ViewDetails1.setBackground(new java.awt.Color(255, 255, 255));
        ViewDetails1.setForeground(new java.awt.Color(0, 0, 0));
        ViewDetails1.setText("View Details");
        ViewDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDetails1ActionPerformed(evt);
            }
        });

        jLabel3.setText("user ID");

        jLabel6.setText("block Number");

        jLabel7.setText("CheckPoint Record Date");

        userId1.setText("userId1");

        blockNumber1.setText("blockNumber1");

        checkPointRecordDate1.setText("checkPointRecordDate1");

        jLabel8.setText("Checkpoint Record ID");

        checkPointRecordID1.setText("checkPointRecordID1");

        jLabel14.setText("CheckPoint RecordTime");

        checkPointRecordTime1.setText("checkPointRecordTime1");

        Delete1.setBackground(new java.awt.Color(255, 255, 255));
        Delete1.setForeground(new java.awt.Color(0, 0, 0));
        Delete1.setText("Delete");
        Delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordID1))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userId1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(blockNumber1))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkPointRecordDate1)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordTime1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(ViewDetails1)
                .addGap(18, 18, 18)
                .addComponent(Delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel14))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkPointRecordDate1)
                    .addComponent(checkPointRecordTime1)
                    .addComponent(blockNumber1)
                    .addComponent(userId1)
                    .addComponent(checkPointRecordID1))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ViewDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Delete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        ViewDetails3.setBackground(new java.awt.Color(255, 255, 255));
        ViewDetails3.setForeground(new java.awt.Color(0, 0, 0));
        ViewDetails3.setText("View Details");
        ViewDetails3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDetails3ActionPerformed(evt);
            }
        });

        jLabel5.setText("user ID");

        jLabel12.setText("block Number");

        jLabel13.setText("CheckPoint Record Date");

        userId3.setText("userId3");

        blockNumber3.setText("blockNumber3");

        checkPointRecordDate3.setText("checkPointRecordDate3");

        jLabel16.setText("Checkpoint Record ID");

        checkPointRecordID3.setText("checkPointRecordID3");

        jLabel17.setText("CheckPoint RecordTime");

        checkPointRecordTime3.setText("checkPointRecordTime3");

        Delete3.setBackground(new java.awt.Color(255, 255, 255));
        Delete3.setForeground(new java.awt.Color(0, 0, 0));
        Delete3.setText("Delete");
        Delete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordID3))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userId3)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(blockNumber3))
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkPointRecordDate3)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordTime3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(ViewDetails3)
                .addGap(18, 18, 18)
                .addComponent(Delete3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkPointRecordDate3)
                            .addComponent(checkPointRecordTime3)
                            .addComponent(blockNumber3)
                            .addComponent(userId3)
                            .addComponent(checkPointRecordID3))
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Delete3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ViewDetails3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        ViewDetails2.setBackground(new java.awt.Color(255, 255, 255));
        ViewDetails2.setForeground(new java.awt.Color(0, 0, 0));
        ViewDetails2.setText("View Details");
        ViewDetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDetails2ActionPerformed(evt);
            }
        });

        jLabel4.setText("user ID");

        jLabel9.setText("block Number");

        jLabel10.setText("CheckPoint Record Date");

        userId2.setText("userId2");

        blockNumber2.setText("blockNumber2");

        checkPointRecordDate2.setText("checkPointRecordDate2");

        jLabel11.setText("Checkpoint Record ID");

        checkPointRecordID2.setText("checkPointRecordID2");

        jLabel15.setText("CheckPoint RecordTime");

        checkPointRecordTime2.setText("checkPointRecordTime2");

        Delete2.setBackground(new java.awt.Color(255, 255, 255));
        Delete2.setForeground(new java.awt.Color(0, 0, 0));
        Delete2.setText("Delete");
        Delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordID2))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userId2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(blockNumber2))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkPointRecordDate2)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPointRecordTime2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(ViewDetails2)
                .addGap(18, 18, 18)
                .addComponent(Delete2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel15))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkPointRecordDate2)
                            .addComponent(checkPointRecordTime2)
                            .addComponent(blockNumber2)
                            .addComponent(userId2)
                            .addComponent(checkPointRecordID2))
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Delete2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ViewDetails2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 610, Short.MAX_VALUE)
                .addComponent(AddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(previousPage, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextPage, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(226, 226, 226))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousPage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextPage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        //        // TODO add your handling code here:
        this.dispose();
        buildingExecMenuFrame BuildingExecMenu = new buildingExecMenuFrame();
        BuildingExecMenu.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        BuildingExecMenu.pack();
        BuildingExecMenu.setResizable(false);
        BuildingExecMenu.setLocationRelativeTo(null);
        BuildingExecMenu.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void AddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewActionPerformed
        // TODO add your handling code here:
        this.dispose();
        buildingExecPatrolAddEdit buildExecAddEdit = new buildingExecPatrolAddEdit();
        buildExecAddEdit.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        buildExecAddEdit.pack();
        buildExecAddEdit.setResizable(false);
        buildExecAddEdit.setLocationRelativeTo(null);
        buildExecAddEdit.setVisible(true);
        try {
            buildExecAddEdit.addEditDetect("add","");
        } catch (FileNotFoundException ex) {
        }
    }//GEN-LAST:event_AddNewActionPerformed

    private void previousPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageActionPerformed
        // TODO add your handling code here:
        backButtonFunction();
        setPatrolData();
        nextPage.setEnabled(true);
    }//GEN-LAST:event_previousPageActionPerformed

    private void nextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPageActionPerformed
        // TODO add your handling code here:
        previousPage.setEnabled(true);
        setPatrolData();
    }//GEN-LAST:event_nextPageActionPerformed

    private void ViewDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDetails1ActionPerformed
        // TODO add your handling code here:
        System.out.println(checkPointRecordID1);
        if(!(checkPointRecordID1.getText()).equals("no data")){
            this.dispose();
            buildingExecPatrolAddEdit buildingExecAddEdit = new buildingExecPatrolAddEdit();
            buildingExecAddEdit.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            buildingExecAddEdit.pack();
            buildingExecAddEdit.setResizable(false);
            buildingExecAddEdit.setLocationRelativeTo(null);
            buildingExecAddEdit.setVisible(true);
            try {
                buildingExecAddEdit.addEditDetect("edit",checkPointRecordID1.getText());
            } catch (FileNotFoundException ex) {
            }
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
    } 
    }//GEN-LAST:event_ViewDetails1ActionPerformed

    private void Delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete1ActionPerformed
        // TODO add your handling code here:
        if(!(checkPointRecordID1.getText()).equals("no data")){
            deleteBtn(checkPointRecordID1.getText());
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Delete1ActionPerformed

    private void ViewDetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDetails2ActionPerformed
      if(!(checkPointRecordID2.getText()).equals("no data")){
            this.dispose();
            buildingExecPatrolAddEdit buildingExecAddEdit = new buildingExecPatrolAddEdit();
            buildingExecAddEdit.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            buildingExecAddEdit.pack();
            buildingExecAddEdit.setResizable(false);
            buildingExecAddEdit.setLocationRelativeTo(null);
            buildingExecAddEdit.setVisible(true);
            try {
                buildingExecAddEdit.addEditDetect("edit",checkPointRecordID2.getText());
            } catch (FileNotFoundException ex) {
            }
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
    }     
     
    }//GEN-LAST:event_ViewDetails2ActionPerformed

    private void Delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete2ActionPerformed
        // TODO add your handling code here:
        if(!(checkPointRecordID2.getText()).equals("no data")){
            deleteBtn(checkPointRecordID2.getText());
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_Delete2ActionPerformed

    private void ViewDetails3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDetails3ActionPerformed
        if(!(checkPointRecordID3.getText()).equals("no data")){
            this.dispose();
            buildingExecPatrolAddEdit buildingExecAddEdit = new buildingExecPatrolAddEdit();
            buildingExecAddEdit.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            buildingExecAddEdit.pack();
            buildingExecAddEdit.setResizable(false);
            buildingExecAddEdit.setLocationRelativeTo(null);
            buildingExecAddEdit.setVisible(true);
            try {
                buildingExecAddEdit.addEditDetect("edit",checkPointRecordID3.getText());
            } catch (FileNotFoundException ex) {
            }
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
    } 
    }//GEN-LAST:event_ViewDetails3ActionPerformed

    private void Delete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete3ActionPerformed
        // TODO add your handling code here:
        if(!(checkPointRecordID3.getText()).equals("no data")){
            deleteBtn(checkPointRecordID3.getText());
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_Delete3ActionPerformed

    public void backButtonToggle(){
        previousPage.setEnabled(false);
}
    
    public void backButtonFunction(){
        PageLine = PageLine -6;
        if (PageLine==-1){
            previousPage.setEnabled(false);
        }
    }

    private String searchTxt ="";

    private Integer PageLine=-1;
    
    public void setPagination(){
        PageLine=PageLine+1;
    }
    
    
    public void setPatrolData(){
        checkpoint checkpointClass = new checkpoint();
        setPagination();
        checkpointClass.displayDataView(PageLine,searchTxt,"Payment");
        boolean boo = checkpointClass.getStatus();
        if(boo==false){
            nextPage.setEnabled(false);
        }
        System.out.println(checkpointClass.getCheckPointRecordID());
        if(checkpointClass.getCheckPointRecordID() !=null){
            checkPointRecordID1.setText(checkpointClass.getCheckPointRecordID());
            userId1.setText(checkpointClass.getUserId());
            blockNumber1.setText(checkpointClass.getBlockNumber());
            checkPointRecordDate1.setText(checkpointClass.getCheckPointRecordDate());
            checkPointRecordTime1.setText(checkpointClass.getCheckPointRecordTime());

        }else{
            checkPointRecordID1.setText("no data");
            userId1.setText("no data");
            blockNumber1.setText("no data");
            checkPointRecordDate1.setText("no data");
            checkPointRecordTime1.setText("no data");

        }
        setPagination();
        checkpointClass.displayDataView(PageLine,searchTxt,"Payment");
        boo = checkpointClass.getStatus();
        if(boo==false){
            nextPage.setEnabled(false);
        }
        if(checkpointClass.getCheckPointRecordID() !=null){
            checkPointRecordID2.setText(checkpointClass.getCheckPointRecordID());
            userId2.setText(checkpointClass.getUserId());
            blockNumber2.setText(checkpointClass.getBlockNumber());
            checkPointRecordDate2.setText(checkpointClass.getCheckPointRecordDate());
            checkPointRecordTime2.setText(checkpointClass.getCheckPointRecordTime());
        }else{
            checkPointRecordID2.setText("no data");
            userId2.setText("no data");
            blockNumber2.setText("no data");
            checkPointRecordDate2.setText("no data");
            checkPointRecordTime2.setText("no data");
        }
        setPagination();
        checkpointClass.displayDataView(PageLine,searchTxt,"Payment");
        boo = checkpointClass.getStatus();
        if(boo==false){
            nextPage.setEnabled(false);
        }
        if(checkpointClass.getCheckPointRecordID() !=null){
            checkPointRecordID3.setText(checkpointClass.getCheckPointRecordID());
            userId3.setText(checkpointClass.getUserId());
            blockNumber3.setText(checkpointClass.getBlockNumber());
            checkPointRecordDate3.setText(checkpointClass.getCheckPointRecordDate());
            checkPointRecordTime3.setText(checkpointClass.getCheckPointRecordTime());
        }else{
            checkPointRecordID3.setText("no data");
            userId3.setText("no data");
            blockNumber3.setText("no data");
            checkPointRecordDate3.setText("no data");
            checkPointRecordTime3.setText("no data");
        }
    }
    
    public void deleteBtn(String getText){
        if(!getText.equals("no data")){
            int ques = JOptionPane.showConfirmDialog(null,"confirm to delete this data", "Quit", JOptionPane.YES_NO_OPTION);
            if (ques == JOptionPane.YES_OPTION){
                buildingExecutive main = new buildingExecutive();
                main.chooseTxtFile("CheckpointRecord");
                buildingExecutive.buildingExecutiveMethod mainInner = main.new buildingExecutiveMethod();
                mainInner.deleteCheckpointRecord(getText);
                JOptionPane.showMessageDialog(null, "Deleted Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
                
                this.dispose();
                buildingExecPatrolManage buildingPatrol = new buildingExecPatrolManage();
                buildingPatrol.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                buildingPatrol.pack();
                buildingPatrol.setResizable(false);
                buildingPatrol.setLocationRelativeTo(null);
                buildingPatrol.setVisible(true);
                buildingPatrol.backButtonToggle();
                //Run Method in BusManUserManage to set UserType and Data
                buildingPatrol.setPatrolData();
            }
        }else{
            JOptionPane.showMessageDialog(null, "This is an empty data", "Warning", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buildingExecPatrolManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buildingExecPatrolManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNew;
    private javax.swing.JButton Back;
    private javax.swing.JButton Delete1;
    private javax.swing.JButton Delete2;
    private javax.swing.JButton Delete3;
    private javax.swing.JButton ViewDetails1;
    private javax.swing.JButton ViewDetails2;
    private javax.swing.JButton ViewDetails3;
    private javax.swing.JLabel blockNumber1;
    private javax.swing.JLabel blockNumber2;
    private javax.swing.JLabel blockNumber3;
    private javax.swing.JLabel checkPointRecordDate1;
    private javax.swing.JLabel checkPointRecordDate2;
    private javax.swing.JLabel checkPointRecordDate3;
    private javax.swing.JLabel checkPointRecordID1;
    private javax.swing.JLabel checkPointRecordID2;
    private javax.swing.JLabel checkPointRecordID3;
    private javax.swing.JLabel checkPointRecordTime1;
    private javax.swing.JLabel checkPointRecordTime2;
    private javax.swing.JLabel checkPointRecordTime3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton nextPage;
    private javax.swing.JButton previousPage;
    private javax.swing.JLabel userId1;
    private javax.swing.JLabel userId2;
    private javax.swing.JLabel userId3;
    // End of variables declaration//GEN-END:variables
}
