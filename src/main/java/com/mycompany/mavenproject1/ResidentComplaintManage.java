/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class ResidentComplaintManage extends javax.swing.JFrame {

    ResidentMain residentMain = new ResidentMain();
    String residentId = residentMain.getId();
    public ArrayList<String> dataList;
    
    
    public ResidentComplaintManage() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        displayData();
        backPageBtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        topLabel = new javax.swing.JLabel();
        editBtn1 = new javax.swing.JButton();
        backPageBtn = new javax.swing.JButton();
        nextPageBtn = new javax.swing.JButton();
        idLabel1 = new javax.swing.JLabel();
        idTxt1 = new javax.swing.JLabel();
        detailLabel1 = new javax.swing.JLabel();
        replyLabel1 = new javax.swing.JLabel();
        detailTxt1 = new javax.swing.JLabel();
        replyTxt1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        deleteBtn1 = new javax.swing.JButton();
        idLabel2 = new javax.swing.JLabel();
        detailLabel2 = new javax.swing.JLabel();
        replyLabel2 = new javax.swing.JLabel();
        idTxt2 = new javax.swing.JLabel();
        detailTxt2 = new javax.swing.JLabel();
        replyTxt2 = new javax.swing.JLabel();
        editBtn2 = new javax.swing.JButton();
        deleteBtn2 = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(233, 233, 233));
        jPanel1.setPreferredSize(new java.awt.Dimension(566, 600));

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("Back");
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        topLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        topLabel.setForeground(new java.awt.Color(0, 0, 0));
        topLabel.setText("COMPLAINT");

        editBtn1.setBackground(new java.awt.Color(255, 255, 255));
        editBtn1.setForeground(new java.awt.Color(0, 0, 0));
        editBtn1.setText("EDIT");
        editBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtn1ActionPerformed(evt);
            }
        });

        backPageBtn.setBackground(new java.awt.Color(255, 255, 255));
        backPageBtn.setForeground(new java.awt.Color(0, 0, 0));
        backPageBtn.setText("Back");
        backPageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backPageBtnActionPerformed(evt);
            }
        });

        nextPageBtn.setBackground(new java.awt.Color(255, 255, 255));
        nextPageBtn.setForeground(new java.awt.Color(0, 0, 0));
        nextPageBtn.setText("Next");
        nextPageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageBtnActionPerformed(evt);
            }
        });

        idLabel1.setBackground(new java.awt.Color(233, 233, 233));
        idLabel1.setForeground(new java.awt.Color(0, 0, 0));
        idLabel1.setText("Complaint ID :");

        idTxt1.setBackground(new java.awt.Color(233, 233, 233));
        idTxt1.setForeground(new java.awt.Color(0, 0, 0));
        idTxt1.setText("C1");

        detailLabel1.setBackground(new java.awt.Color(233, 233, 233));
        detailLabel1.setForeground(new java.awt.Color(0, 0, 0));
        detailLabel1.setText("Complaint Details :");

        replyLabel1.setBackground(new java.awt.Color(233, 233, 233));
        replyLabel1.setForeground(new java.awt.Color(0, 0, 0));
        replyLabel1.setText("Complaint Reply :");

        detailTxt1.setBackground(new java.awt.Color(233, 233, 233));
        detailTxt1.setForeground(new java.awt.Color(0, 0, 0));
        detailTxt1.setText("Issue");

        replyTxt1.setBackground(new java.awt.Color(233, 233, 233));
        replyTxt1.setForeground(new java.awt.Color(0, 0, 0));
        replyTxt1.setText("Reply Data");

        deleteBtn1.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn1.setForeground(new java.awt.Color(0, 0, 0));
        deleteBtn1.setText("DELETE");
        deleteBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtn1ActionPerformed(evt);
            }
        });

        idLabel2.setBackground(new java.awt.Color(233, 233, 233));
        idLabel2.setForeground(new java.awt.Color(0, 0, 0));
        idLabel2.setText("Complaint ID :");

        detailLabel2.setBackground(new java.awt.Color(233, 233, 233));
        detailLabel2.setForeground(new java.awt.Color(0, 0, 0));
        detailLabel2.setText("Complaint Details :");

        replyLabel2.setBackground(new java.awt.Color(233, 233, 233));
        replyLabel2.setForeground(new java.awt.Color(0, 0, 0));
        replyLabel2.setText("Complaint Reply :");

        idTxt2.setBackground(new java.awt.Color(233, 233, 233));
        idTxt2.setForeground(new java.awt.Color(0, 0, 0));
        idTxt2.setText("C1");

        detailTxt2.setBackground(new java.awt.Color(233, 233, 233));
        detailTxt2.setForeground(new java.awt.Color(0, 0, 0));
        detailTxt2.setText("Issue");

        replyTxt2.setBackground(new java.awt.Color(233, 233, 233));
        replyTxt2.setForeground(new java.awt.Color(0, 0, 0));
        replyTxt2.setText("Reply Data");

        editBtn2.setBackground(new java.awt.Color(255, 255, 255));
        editBtn2.setForeground(new java.awt.Color(0, 0, 0));
        editBtn2.setText("EDIT");
        editBtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtn2ActionPerformed(evt);
            }
        });

        deleteBtn2.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn2.setForeground(new java.awt.Color(0, 0, 0));
        deleteBtn2.setText("DELETE");
        deleteBtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtn2ActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 0, 0));
        addBtn.setText("ADD");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(topLabel)
                        .addGap(68, 68, 68)
                        .addComponent(backPageBtn)
                        .addGap(18, 18, 18)
                        .addComponent(nextPageBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(idLabel2)
                                .addGap(99, 99, 99)
                                .addComponent(idTxt2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailLabel2)
                                    .addComponent(replyLabel2)
                                    .addComponent(editBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(replyTxt2)
                                    .addComponent(deleteBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailLabel1)
                                    .addComponent(idLabel1)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(editBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(replyLabel1)))
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(replyTxt1)
                                    .addComponent(idTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backPageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextPageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel1)
                    .addComponent(idTxt1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detailLabel1)
                    .addComponent(detailTxt1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(replyTxt1)
                    .addComponent(replyLabel1))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel2)
                    .addComponent(idTxt2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detailLabel2)
                    .addComponent(detailTxt2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replyLabel2)
                    .addComponent(replyTxt2))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.dispose();
        ResidentOption residentOption = new ResidentOption();
        residentOption.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void editBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtn1ActionPerformed
        dataList = new ArrayList<String>();
        dataList.add(idTxt1.getText());
        dataList.add(detailTxt1.getText());
        dataList.add(replyTxt1.getText());
        dataList.add(residentId);
        this.dispose();
        ResidentComplaintAddEdit addEdit = new ResidentComplaintAddEdit("edit",dataList);
        addEdit.setVisible(true);

    }//GEN-LAST:event_editBtn1ActionPerformed

    private void backPageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backPageBtnActionPerformed

        backButtonFunction();
        nextPageBtn.setEnabled(true);
        displayData();
    }//GEN-LAST:event_backPageBtnActionPerformed

    private void nextPageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPageBtnActionPerformed

        backPageBtn.setEnabled(true);
        displayData();
    }//GEN-LAST:event_nextPageBtnActionPerformed

    private void deleteBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtn1ActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Click 'YES' Will Delete This Complaint ",
            "INFORMATION", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION)
        {
            removeSelected("upper");
            this.dispose();
            ResidentComplaintManage complaint = new ResidentComplaintManage();
            complaint.setVisible(true);
        }

    }//GEN-LAST:event_deleteBtn1ActionPerformed

    private void editBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtn2ActionPerformed
        dataList = new ArrayList<String>();
        dataList.add(idTxt2.getText());
        dataList.add(detailTxt2.getText());
        dataList.add(replyTxt2.getText());
        dataList.add(residentId);
        this.dispose();
        ResidentComplaintAddEdit addEdit = new ResidentComplaintAddEdit("edit",dataList);
        addEdit.setVisible(true);
    }//GEN-LAST:event_editBtn2ActionPerformed

    private void deleteBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtn2ActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Click 'YES' Will Delete This Complaint ",
            "INFORMATION", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION)
        {
            removeSelected("bottom");
            this.dispose();
            ResidentComplaintManage complaint = new ResidentComplaintManage();
            complaint.setVisible(true);
        }
    }//GEN-LAST:event_deleteBtn2ActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        dataList = new ArrayList<String>();
        this.dispose();
        ResidentComplaintAddEdit addEdit = new ResidentComplaintAddEdit("edit",dataList);
        addEdit.setVisible(true);
    }//GEN-LAST:event_addBtnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidentComplaintManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidentComplaintManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidentComplaintManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidentComplaintManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidentComplaintManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backPageBtn;
    private javax.swing.JButton deleteBtn1;
    private javax.swing.JButton deleteBtn2;
    private javax.swing.JLabel detailLabel1;
    private javax.swing.JLabel detailLabel2;
    private javax.swing.JLabel detailTxt1;
    private javax.swing.JLabel detailTxt2;
    private javax.swing.JButton editBtn1;
    private javax.swing.JButton editBtn2;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JLabel idLabel2;
    private javax.swing.JLabel idTxt1;
    private javax.swing.JLabel idTxt2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton nextPageBtn;
    private javax.swing.JLabel replyLabel1;
    private javax.swing.JLabel replyLabel2;
    private javax.swing.JLabel replyTxt1;
    private javax.swing.JLabel replyTxt2;
    private javax.swing.JLabel topLabel;
    // End of variables declaration//GEN-END:variables


    private int pageLine=-1;
    
    private void setPagination(){
        pageLine=pageLine+1;
    }
    
    public void backButtonFunction(){
        pageLine = pageLine - 4;
        if (pageLine == -1){
            backPageBtn.setEnabled(false);
        }
    }
    
    private void displayData(){
        setPagination();
        displayDataView(pageLine, "upper");
        boolean boo = residentMain.getStatus();
        if(boo==false){
            nextPageBtn.setEnabled(false);
        }
        
        setPagination();
        displayDataView(pageLine, "bottom");
        boolean boo2 = residentMain.getStatus();
        if(boo2==false){
            nextPageBtn.setEnabled(false);
        }
        
        
    }
    
    private void displayDataView(Integer pageLine, String part)
    {
        try{
            String complaintFile = "src/main/java/com/mycompany/textFile/Complaint.txt";
            ArrayList<ArrayList<String>> userData = onlyUserDataInfo(complaintFile);
            int newSize = userData.size();            
            try{
                userData.get(pageLine);
                if(part.equals("upper"))
                {
                    idTxt1.setText(userData.get(pageLine).get(0));
                    detailTxt1.setText(userData.get(pageLine).get(1));
                    replyTxt1.setText(userData.get(pageLine).get(2));
                    if(!replyTxt1.getText().equals("")) //if replied
                    {
                        editBtn1.setEnabled(false);
                    }
                    idTxt2.setText("no data");
                    detailTxt2.setText("no data");
                    replyTxt2.setText("no data");
                    editBtn2.setEnabled(false);
                    deleteBtn2.setEnabled(false);
                    residentMain.setStatus(true);
                }else{
                    idTxt2.setText(userData.get(pageLine).get(0));
                    detailTxt2.setText(userData.get(pageLine).get(1));
                    replyTxt2.setText(userData.get(pageLine).get(2));
                    if(!replyTxt1.getText().equals("")) //if replied
                    {
                        editBtn1.setEnabled(false);
                    }else{
                       editBtn2.setEnabled(true); 
                    }
                    
                    deleteBtn2.setEnabled(true);
                    residentMain.setStatus(true);
                }
                if(idTxt1.getText() == null)
                {
                    idTxt1.setText("no data");
                    detailTxt1.setText("no data");
                    replyTxt1.setText("no data");
                }
                if(idTxt2.getText() == null)
                {
                    idTxt2.setText("no data");
                    detailTxt2.setText("no data");
                    replyTxt2.setText("no data");
                }
                
            }
            catch (Exception ex) {
                residentMain.setStatus(false);
            }
            
            if(pageLine.equals(newSize-1)){
                residentMain.setStatus(false);
            }
        }
        catch(FileNotFoundException ex){
            Logger.getLogger(ResidentPay.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    private ArrayList<ArrayList<String>> onlyUserDataInfo(String textFile) throws FileNotFoundException 
    {
        ArrayList<ArrayList<String>> allUserInfo = allUserDataInfo(textFile);
        ArrayList<ArrayList<String>> onlyUserInfo = new ArrayList<>();
        
        
        int p,q;
        for (p=0,q=0; p<allUserInfo.size(); p++)
        {
            if(allUserInfo.get(p).contains(residentId))
            {
                ArrayList<String> item = allUserInfo.get(p);
                if(item.get(3).equals(residentId))
                {
                    onlyUserInfo.add(allUserInfo.get(p));
                    q++;
                }
            }
        }
       
        return onlyUserInfo;
    }
     
    private ArrayList<ArrayList<String>> allUserDataInfo(String textFile) throws FileNotFoundException 
    {
        File file = new File(textFile);
        ArrayList<ArrayList<String>> allUserInfo = new ArrayList<>();
        if (file.exists()) {
            Scanner sc = new Scanner(file);
            String oneUserInfo; 
            String[] itemArray;
            ArrayList<String> itemArrayList;
            allUserInfo = new ArrayList<>();
            while (sc.hasNextLine()) { 
                oneUserInfo = sc.nextLine().trim(); 
                itemArray = oneUserInfo.split(","); 
                itemArrayList = new ArrayList<>(Arrays.asList(itemArray));
                allUserInfo.add(itemArrayList);
            }
        }
        
        return allUserInfo;
    }
    
    private void removeSelected(String part)
    {
        try {
            String fileName = "src/main/java/com/mycompany/textFile/VisitorPass.txt";
            ArrayList<ArrayList<String>> userData = allUserDataInfo(fileName);
            if(part.equals("upper"))
            {
                for(int j=0;j<userData.size();j++)
                {
                    if(userData.get(j).get(3).equals(residentId)
                            && userData.get(j).get(0).equals(idTxt1.getText())
                            && userData.get(j).get(1).equals(detailTxt1.getText())
                            && userData.get(j).get(2).equals(replyTxt1.getText()))
                    {
                        userData.remove(j);
                        break;
                    }
                }
            }else if(part.equals("bottom"))
            {
                for(int j=0;j<userData.size();j++)
                {
                    if(userData.get(j).get(3).equals(residentId)
                            && userData.get(j).get(0).equals(idTxt2.getText())
                            && userData.get(j).get(1).equals(detailTxt2.getText())
                            && userData.get(j).get(2).equals(replyTxt2.getText()))
                    {
                        userData.remove(j);
                        break;
                    }
                }
            }
            
            
            File paymentFile = new File(fileName);
            FileWriter fw = new FileWriter(paymentFile);
            BufferedWriter bw = new BufferedWriter(fw);
            for (int j=0; j<userData.size(); j++) 
            {
                ArrayList<String>item = userData.get(j);
                for(int k=0; k<item.size(); k++)
                {
                    if(k == item.size()-1)
                    {
                       bw.write(item.get(k));
                    }else{
                       bw.write(item.get(k)+",");
                    }
                }
                bw.write("\n");
            }
            bw.close();
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ResidentPay.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ResidentPay.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


}
